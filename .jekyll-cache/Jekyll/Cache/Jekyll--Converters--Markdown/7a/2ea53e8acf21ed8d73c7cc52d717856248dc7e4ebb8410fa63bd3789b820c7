I"A<h3 id="why-would-i-do-something-like-that">Why would I do something like that?</h3>

<p>Hello everyone!</p>

<p>My next activity is working on a pet-project.</p>

<p>In this case, I have only one goal to start creating my own project. It sounds like this</p>

<h3 id="start-doing-it">“Start doing it!”</h3>

<p>Seriously, I almost don’t do my own project. Time to fix it!</p>

<p>I believe that this will help me:</p>

<ul>
  <li>Learn to solve problems I didn’t know about before</li>
  <li>Learn more about technology</li>
  <li>Increase motivaiton to work</li>
  <li>Work better with kpi and time management</li>
</ul>

<h3 id="description-of-project">Description of project</h3>
<p>I implemented the round-robin algorithm in the desktop application.</p>

<p>More about the algorithm you can see on the <a href="https://en.wikipedia.org/wiki/Round-robin">wikipedia</a></p>

<p>Also I like this tutorial for better undestanding where is it used <a href="https://www.youtube.com/watch?v=TxjIlNYRZ5M">youtube channel</a></p>

<h5 id="step-1-made-a-development-plan">Step 1. Made a development plan</h5>
<p><img src="https://rocket47.github.io/roundrobinplan.jpeg" alt="alt text" width="700" /></p>

<h5 id="step-2-time-to-create-a-ui">Step 2. Time to create a UI</h5>
<p><img src="https://rocket47.github.io/MainFormUI.png" alt="alt text" width="700" /></p>

<h5 id="step-3-add-settings-form-implement-default-mode">Step 3. Add settings form. Implement default mode.</h5>
<p><img src="https://rocket47.github.io/SettingsForm.png" alt="alt text" width="350" /></p>

<h5 id="data-storage-is-implemented-in-a-standard-way-save-in-the-appconfigxml-file">Data storage is implemented in a standard way. Save in the app.config.xml file.</h5>
<p><img src="https://rocket47.github.io/AppSettings.png" alt="alt text" width="600" /></p>

<h5 id="step-4-create-timer">Step 4. Create timer</h5>

<p>Every tick (1 second) functions are called</p>

<p><img src="https://rocket47.github.io/Timer.png" alt="alt text" width="500" /></p>

<h5 id="step-5-create-listview-fill-logic">Step 5. Create listview fill logic</h5>

<p>After selecting the “NEW” button, random names and tasks are generated by parameters according to the round-robin principle</p>

<ul>
  <li>1st worker =&gt; task 1</li>
  <li>2nd worker =&gt; task 2</li>
  <li>3rd worker =&gt; task 3</li>
  <li>…</li>
  <li>1st worker =&gt; task (n+1)</li>
</ul>

<p><img src="https://rocket47.github.io/ListView1.png" alt="alt text" width="1000" /></p>

<p>When timer is triggered, a function that redistributes the tasks of employees is activated with a 50% probability</p>

<p><img src="https://rocket47.github.io/ListView2.png" alt="alt text" width="1000" /></p>

<h4 id="the-algorithm-is-modeled-cyclically-until-all-tasks-are-completed">The algorithm is modeled cyclically until all tasks are completed</h4>

<p><img src="https://rocket47.github.io/ListView3.png" alt="alt text" width="1000" /></p>

<h5 id="function-to-generate-names-of-employees">Function to generate names of employees</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public string GenerateNameWorker()
    {
        Random r = new Random();
        int len = r.Next(4, 10);
        string[] consonants = { "b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "l", "n", "p", "q", "r", "s", "sh", "zh", "t", "v", "w", "x" };
        string[] vowels = { "a", "e", "i", "o", "u", "ae", "y" };
        string Name = "";
        Name += consonants[r.Next(consonants.Length)].ToUpper();
        Name += vowels[r.Next(vowels.Length)];
        int timeLetterAdded = 2; 
        while (timeLetterAdded &lt; len)
        {
            Name += consonants[r.Next(consonants.Length)];
            timeLetterAdded++;
            Name += vowels[r.Next(vowels.Length)];
            timeLetterAdded++;
        }
        return Name;
    }
</code></pre></div></div>

<h5 id="i-would-like-to-create-function-without-creating-names-first-i-thought-it-would-be-interesting--this-is-why-the-implementation-is-like-this">I would like to create function without creating names first. I thought it would be interesting.  This is why the implementation is like this.</h5>

<h5 id="step-6-add-button-pause-when-the-button-is-pressed-the-timer-remains">Step 6. Add button pause. When the button is pressed, the timer remains</h5>

<p><img src="https://rocket47.github.io/ButtonPause.png" alt="alt text" width="500" /></p>

<h5 id="notes">Notes.</h5>

<ul>
  <li>Separately, I would like to say about the flicker problem in listview. This solution solved my life! I hope it will be useful for you:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>listview
.GetType()
.GetProperty("DoubleBuffered", System.Reflection.BindingFlags.Instance | 		
System.Reflection.BindingFlags.NonPublic)
.SetValue(listview, true, null);
</code></pre></div>    </div>
  </li>
  <li>One of my next goals is to understand multithreading.</li>
</ul>

<p>I didn’t use it in this project. It’s terrible. Main UI thread blocked when generate random names and task. Moving on!</p>

<h5 id="thank-you-for-the-attention-you-can-try-to-install-msi-and-just-test-tool">Thank you for the attention! You can try to install msi and just test tool.</h5>
<p><a href="https://github.com/Rocket47/learn_Csharp_practice/releases/tag/v1.0">release v1.0</a></p>
:ET